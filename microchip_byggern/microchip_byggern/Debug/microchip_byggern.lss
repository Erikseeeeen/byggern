
microchip_byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000008f2  00000986  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800112  00800112  00000998  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001285  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aed  00000000  00000000  00001d99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008eb  00000000  00000000  00002886  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003174  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000067e  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b2  00000000  00000000  000039f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003ea4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x23e>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e2 ef       	ldi	r30, 0xF2	; 242
 37c:	f8 e0       	ldi	r31, 0x08	; 8
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a2 31       	cpi	r26, 0x12	; 18
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a2 e1       	ldi	r26, 0x12	; 18
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	ac 31       	cpi	r26, 0x1C	; 28
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
 39e:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <main>:
#include "adc.h"


int main(void)
{
	usart_init(USART_BAUD_RATE_REGISTER);
 3a6:	8f e1       	ldi	r24, 0x1F	; 31
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 7d 02 	call	0x4fa	; 0x4fa <usart_init>
	xmem_init();
 3ae:	0e 94 ae 02 	call	0x55c	; 0x55c <xmem_init>
	adc_init();
 3b2:	0e 94 90 02 	call	0x520	; 0x520 <adc_init>
	OLED_init();
 3b6:	0e 94 2b 02 	call	0x456	; 0x456 <OLED_init>
	
	printf("Hello world\n");
 3ba:	86 e0       	ldi	r24, 0x06	; 6
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	0e 94 03 03 	call	0x606	; 0x606 <puts>
 3c2:	ff cf       	rjmp	.-2      	; 0x3c2 <main+0x1c>

000003c4 <OLED_write_data>:
	volatile char* oled_command_register = (char*) BASE_ADDRESS_OLED_COMMAND;
	oled_command_register[0] = data;
}
void OLED_print(char* string)
{
	OLED_pos ( 0,0 );
 3c4:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10e4>
 3c8:	08 95       	ret

000003ca <OLED_write_command>:
 3ca:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xee4>
 3ce:	08 95       	ret

000003d0 <OLED_reset>:
 3d0:	0f 93       	push	r16
 3d2:	1f 93       	push	r17
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	00 e0       	ldi	r16, 0x00	; 0
 3da:	10 e0       	ldi	r17, 0x00	; 0
 3dc:	16 c0       	rjmp	.+44     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 3de:	80 eb       	ldi	r24, 0xB0	; 176
 3e0:	80 0f       	add	r24, r16
 3e2:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
 3ec:	80 e1       	ldi	r24, 0x10	; 16
 3ee:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
 3f2:	c0 e0       	ldi	r28, 0x00	; 0
 3f4:	d0 e0       	ldi	r29, 0x00	; 0
 3f6:	04 c0       	rjmp	.+8      	; 0x400 <__DATA_REGION_LENGTH__>
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <OLED_write_data>
 3fe:	21 96       	adiw	r28, 0x01	; 1
 400:	c0 38       	cpi	r28, 0x80	; 128
 402:	d1 05       	cpc	r29, r1
 404:	cc f3       	brlt	.-14     	; 0x3f8 <OLED_reset+0x28>
 406:	0f 5f       	subi	r16, 0xFF	; 255
 408:	1f 4f       	sbci	r17, 0xFF	; 255
 40a:	08 30       	cpi	r16, 0x08	; 8
 40c:	11 05       	cpc	r17, r1
 40e:	3c f3       	brlt	.-50     	; 0x3de <OLED_reset+0xe>
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	1f 91       	pop	r17
 416:	0f 91       	pop	r16
 418:	08 95       	ret

0000041a <OLED_print_character>:
}
void OLED_print_character(char character)
{
 41a:	1f 93       	push	r17
 41c:	cf 93       	push	r28
 41e:	df 93       	push	r29
 420:	18 2f       	mov	r17, r24
	for (int row = 0; row < 8; row++)
 422:	c0 e0       	ldi	r28, 0x00	; 0
 424:	d0 e0       	ldi	r29, 0x00	; 0
 426:	10 c0       	rjmp	.+32     	; 0x448 <OLED_print_character+0x2e>
	{
		OLED_write_data(font8[character][row]);
 428:	e1 2f       	mov	r30, r17
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	ee 0f       	add	r30, r30
 42e:	ff 1f       	adc	r31, r31
 430:	ee 0f       	add	r30, r30
 432:	ff 1f       	adc	r31, r31
 434:	ee 0f       	add	r30, r30
 436:	ff 1f       	adc	r31, r31
 438:	e0 59       	subi	r30, 0x90	; 144
 43a:	ff 4f       	sbci	r31, 0xFF	; 255
 43c:	ec 0f       	add	r30, r28
 43e:	fd 1f       	adc	r31, r29
 440:	80 81       	ld	r24, Z
 442:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <OLED_write_data>
{
	OLED_pos ( 0,0 );
}
void OLED_print_character(char character)
{
	for (int row = 0; row < 8; row++)
 446:	21 96       	adiw	r28, 0x01	; 1
 448:	c8 30       	cpi	r28, 0x08	; 8
 44a:	d1 05       	cpc	r29, r1
 44c:	6c f3       	brlt	.-38     	; 0x428 <OLED_print_character+0xe>
	{
		OLED_write_data(font8[character][row]);
	}
}
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
 452:	1f 91       	pop	r17
 454:	08 95       	ret

00000456 <OLED_init>:
#include "oled.h"

void OLED_init()
{
	
	OLED_write_command(0xae); // display off
 456:	8e ea       	ldi	r24, 0xAE	; 174
 458:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xa1); //segment remap
 45c:	81 ea       	ldi	r24, 0xA1	; 161
 45e:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xda); //common pads hardware: alternative
 462:	8a ed       	ldi	r24, 0xDA	; 218
 464:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x12);
 468:	82 e1       	ldi	r24, 0x12	; 18
 46a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xc8); //common output scan direction:com63~com0
 46e:	88 ec       	ldi	r24, 0xC8	; 200
 470:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xa8); //multiplex ration mode:63
 474:	88 ea       	ldi	r24, 0xA8	; 168
 476:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x3f);
 47a:	8f e3       	ldi	r24, 0x3F	; 63
 47c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xd5); //display divide ratio/osc. freq. mode
 480:	85 ed       	ldi	r24, 0xD5	; 213
 482:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x80);
 486:	80 e8       	ldi	r24, 0x80	; 128
 488:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x81); //contrast control
 48c:	81 e8       	ldi	r24, 0x81	; 129
 48e:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x50);
 492:	80 e5       	ldi	r24, 0x50	; 80
 494:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xd9); //set pre-charge period
 498:	89 ed       	ldi	r24, 0xD9	; 217
 49a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x21);
 49e:	81 e2       	ldi	r24, 0x21	; 33
 4a0:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x20); //Set Memory Addressing Mode
 4a4:	80 e2       	ldi	r24, 0x20	; 32
 4a6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x02);
 4aa:	82 e0       	ldi	r24, 0x02	; 2
 4ac:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xdb); //VCOM deselect level mode
 4b0:	8b ed       	ldi	r24, 0xDB	; 219
 4b2:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x30);
 4b6:	80 e3       	ldi	r24, 0x30	; 48
 4b8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xad); //master configuration
 4bc:	8d ea       	ldi	r24, 0xAD	; 173
 4be:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0x00);
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xa4); //out follows RAM content
 4c8:	84 ea       	ldi	r24, 0xA4	; 164
 4ca:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xa6); //set normal display
 4ce:	86 ea       	ldi	r24, 0xA6	; 166
 4d0:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	OLED_write_command(0xaf); // display on
 4d4:	8f ea       	ldi	r24, 0xAF	; 175
 4d6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <OLED_write_command>
	//OLED_write_command(0xa5);
	/*OLED_write_command(0xb0); // Set the page start address of the target display location by command B0h to B7h
	OLED_write_command(0x00); // Set the lower start column address of pointer by command 00h~0Fh.
	OLED_write_command(0x10); // Set the upper start column address of pointer by command 10h~1Fh*/
	
	OLED_reset();
 4da:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <OLED_reset>
	OLED_print_character(100);
 4de:	84 e6       	ldi	r24, 0x64	; 100
 4e0:	0e 94 0d 02 	call	0x41a	; 0x41a <OLED_print_character>
 4e4:	08 95       	ret

000004e6 <USART_Transmit>:
    
}
void USART_Transmit(unsigned char data)
{
    // Wait until the transmitter buffer is empty
    while ( !( UCSR0A & (1<<UDRE0)) ); // USART Control and Status Register A, USART Data Register Empty
 4e6:	5d 9b       	sbis	0x0b, 5	; 11
 4e8:	fe cf       	rjmp	.-4      	; 0x4e6 <USART_Transmit>
    // Send data
    UDR0 = data; // USART Data Register
 4ea:	8c b9       	out	0x0c, r24	; 12
 4ec:	08 95       	ret

000004ee <USART_Receive>:
}

unsigned char USART_Receive(void)
{
    // Wait for data to be received
    if ( !(UCSR0A & (1<<RXC0)) ) // USART Control and Status Register A, USART Receive Complete
 4ee:	5f 9b       	sbis	0x0b, 7	; 11
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <USART_Receive+0x8>
        return '\0';
    // Return data received
    return UDR0; // USART Data Register
 4f2:	8c b1       	in	r24, 0x0c	; 12
 4f4:	08 95       	ret

unsigned char USART_Receive(void)
{
    // Wait for data to be received
    if ( !(UCSR0A & (1<<RXC0)) ) // USART Control and Status Register A, USART Receive Complete
        return '\0';
 4f6:	80 e0       	ldi	r24, 0x00	; 0
    // Return data received
    return UDR0; // USART Data Register
 4f8:	08 95       	ret

000004fa <usart_init>:

// static FILE usart_stream_write = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
// static FILE usart_stream_read = FDEV_SETUP_STREAM(NULL, USART_Transmit, _FDEV_SETUP_READ);

void usart_init(unsigned int usart_baud_rate_register)
{
 4fa:	cf 93       	push	r28
 4fc:	df 93       	push	r29
 4fe:	c8 2f       	mov	r28, r24
 500:	d9 2f       	mov	r29, r25
    // Open read/write stream over USART https://www.nongnu.org/avr-libc/user-manual/group__avr__stdio.html#gab599ddf60819df4cc993c724a83cb1a4
    fdevopen(USART_Transmit, USART_Receive);
 502:	67 e7       	ldi	r22, 0x77	; 119
 504:	72 e0       	ldi	r23, 0x02	; 2
 506:	83 e7       	ldi	r24, 0x73	; 115
 508:	92 e0       	ldi	r25, 0x02	; 2
 50a:	0e 94 b8 02 	call	0x570	; 0x570 <fdevopen>
    // Set baud rate registers
    UBRR0H = (unsigned char)(usart_baud_rate_register>>8); // usart_baud_rate_register_high
 50e:	d0 bd       	out	0x20, r29	; 32
    UBRR0L = (unsigned char)usart_baud_rate_register; // usart_baud_rate_register_low
 510:	c9 b9       	out	0x09, r28	; 9
    
    // Enable RX and TX registers
    UCSR0B = (1<<RXEN0) | (1<<TXEN0); // Universal Synchronous Asynchronous Receiver Transmitter Register B, RX Enable, TX Enable
 512:	88 e1       	ldi	r24, 0x18	; 24
 514:	8a b9       	out	0x0a, r24	; 10
    
	
    // Set frame format to 8 data bits, 2 stop bits
    UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00); // Universal Synchronous Asynchronous Receiver Transmitter Register C, USART Register Select, USART Stop Bit Select, USART Character Size Select
 516:	8e e8       	ldi	r24, 0x8E	; 142
 518:	80 bd       	out	0x20, r24	; 32
    
}
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	08 95       	ret

00000520 <adc_init>:
	
	OCR1A = (FREQUENCY_OF_OSCILLATOR / (2 * 64 * FREQUENCY_OF_OSCILLATOR)) -1;
	
	TCNT1 = 0; // Enable counter*/

	DDRD |= 1 << PD4;
 520:	81 b3       	in	r24, 0x11	; 17
 522:	80 61       	ori	r24, 0x10	; 16
 524:	81 bb       	out	0x11, r24	; 17
	TCCR3A |= (1 << COM3A0); // Toggle on compare
 526:	ab e8       	ldi	r26, 0x8B	; 139
 528:	b0 e0       	ldi	r27, 0x00	; 0
 52a:	8c 91       	ld	r24, X
 52c:	80 64       	ori	r24, 0x40	; 64
 52e:	8c 93       	st	X, r24
	TCCR3B |= (1 << WGM33) | (1 << WGM32);
 530:	ea e8       	ldi	r30, 0x8A	; 138
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	80 81       	ld	r24, Z
 536:	88 61       	ori	r24, 0x18	; 24
 538:	80 83       	st	Z, r24
	TCCR3A |= (1 << WGM31) | (1 << WGM30); // Fast PWM OCRnA, datasheet p.130
 53a:	8c 91       	ld	r24, X
 53c:	83 60       	ori	r24, 0x03	; 3
 53e:	8c 93       	st	X, r24
	TCCR3B |= (1 << CS30); // No prescaling, datasheet p.132
 540:	80 81       	ld	r24, Z
 542:	81 60       	ori	r24, 0x01	; 1
 544:	80 83       	st	Z, r24
	OCR3A = 0;
 546:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 54a:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	
	// Enable button input
	DDRD &= ~(1 << PD2);
 54e:	81 b3       	in	r24, 0x11	; 17
 550:	8b 7f       	andi	r24, 0xFB	; 251
 552:	81 bb       	out	0x11, r24	; 17
	DDRD &= ~(1 << PD3);
 554:	81 b3       	in	r24, 0x11	; 17
 556:	87 7f       	andi	r24, 0xF7	; 247
 558:	81 bb       	out	0x11, r24	; 17
}
 55a:	08 95       	ret

0000055c <xmem_init>:
#include "xmem.h"

// From lab lecture
void xmem_init(void) {
	// Enable XMEM
	MCUCR |= (1 << SRE);
 55c:	85 b7       	in	r24, 0x35	; 53
 55e:	80 68       	ori	r24, 0x80	; 128
 560:	85 bf       	out	0x35, r24	; 53
	// Mask out some port C address pins for JTAG (datasheet page 32)
	SFIOR |= 1 << XMM2;
 562:	80 b7       	in	r24, 0x30	; 48
 564:	80 62       	ori	r24, 0x20	; 32
 566:	80 bf       	out	0x30, r24	; 48
	SFIOR &= ~(1 << XMM0 | 1 << XMM1);
 568:	80 b7       	in	r24, 0x30	; 48
 56a:	87 7e       	andi	r24, 0xE7	; 231
 56c:	80 bf       	out	0x30, r24	; 48
 56e:	08 95       	ret

00000570 <fdevopen>:
 570:	0f 93       	push	r16
 572:	1f 93       	push	r17
 574:	cf 93       	push	r28
 576:	df 93       	push	r29
 578:	00 97       	sbiw	r24, 0x00	; 0
 57a:	31 f4       	brne	.+12     	; 0x588 <fdevopen+0x18>
 57c:	61 15       	cp	r22, r1
 57e:	71 05       	cpc	r23, r1
 580:	19 f4       	brne	.+6      	; 0x588 <fdevopen+0x18>
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	3a c0       	rjmp	.+116    	; 0x5fc <fdevopen+0x8c>
 588:	8b 01       	movw	r16, r22
 58a:	ec 01       	movw	r28, r24
 58c:	6e e0       	ldi	r22, 0x0E	; 14
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 33 03 	call	0x666	; 0x666 <calloc>
 598:	fc 01       	movw	r30, r24
 59a:	89 2b       	or	r24, r25
 59c:	91 f3       	breq	.-28     	; 0x582 <fdevopen+0x12>
 59e:	80 e8       	ldi	r24, 0x80	; 128
 5a0:	83 83       	std	Z+3, r24	; 0x03
 5a2:	01 15       	cp	r16, r1
 5a4:	11 05       	cpc	r17, r1
 5a6:	71 f0       	breq	.+28     	; 0x5c4 <fdevopen+0x54>
 5a8:	13 87       	std	Z+11, r17	; 0x0b
 5aa:	02 87       	std	Z+10, r16	; 0x0a
 5ac:	81 e8       	ldi	r24, 0x81	; 129
 5ae:	83 83       	std	Z+3, r24	; 0x03
 5b0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 5b4:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 5b8:	89 2b       	or	r24, r25
 5ba:	21 f4       	brne	.+8      	; 0x5c4 <fdevopen+0x54>
 5bc:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__data_end+0x1>
 5c0:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__data_end>
 5c4:	20 97       	sbiw	r28, 0x00	; 0
 5c6:	c9 f0       	breq	.+50     	; 0x5fa <fdevopen+0x8a>
 5c8:	d1 87       	std	Z+9, r29	; 0x09
 5ca:	c0 87       	std	Z+8, r28	; 0x08
 5cc:	83 81       	ldd	r24, Z+3	; 0x03
 5ce:	82 60       	ori	r24, 0x02	; 2
 5d0:	83 83       	std	Z+3, r24	; 0x03
 5d2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
 5d6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
 5da:	89 2b       	or	r24, r25
 5dc:	71 f4       	brne	.+28     	; 0x5fa <fdevopen+0x8a>
 5de:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x3>
 5e2:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end+0x2>
 5e6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x4>
 5ea:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x5>
 5ee:	89 2b       	or	r24, r25
 5f0:	21 f4       	brne	.+8      	; 0x5fa <fdevopen+0x8a>
 5f2:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x5>
 5f6:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end+0x4>
 5fa:	cf 01       	movw	r24, r30
 5fc:	df 91       	pop	r29
 5fe:	cf 91       	pop	r28
 600:	1f 91       	pop	r17
 602:	0f 91       	pop	r16
 604:	08 95       	ret

00000606 <puts>:
 606:	0f 93       	push	r16
 608:	1f 93       	push	r17
 60a:	cf 93       	push	r28
 60c:	df 93       	push	r29
 60e:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end+0x2>
 612:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x3>
 616:	23 81       	ldd	r18, Z+3	; 0x03
 618:	21 ff       	sbrs	r18, 1
 61a:	1b c0       	rjmp	.+54     	; 0x652 <puts+0x4c>
 61c:	8c 01       	movw	r16, r24
 61e:	d0 e0       	ldi	r29, 0x00	; 0
 620:	c0 e0       	ldi	r28, 0x00	; 0
 622:	f8 01       	movw	r30, r16
 624:	81 91       	ld	r24, Z+
 626:	8f 01       	movw	r16, r30
 628:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <__data_end+0x2>
 62c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <__data_end+0x3>
 630:	db 01       	movw	r26, r22
 632:	18 96       	adiw	r26, 0x08	; 8
 634:	ed 91       	ld	r30, X+
 636:	fc 91       	ld	r31, X
 638:	19 97       	sbiw	r26, 0x09	; 9
 63a:	88 23       	and	r24, r24
 63c:	31 f0       	breq	.+12     	; 0x64a <puts+0x44>
 63e:	09 95       	icall
 640:	89 2b       	or	r24, r25
 642:	79 f3       	breq	.-34     	; 0x622 <puts+0x1c>
 644:	df ef       	ldi	r29, 0xFF	; 255
 646:	cf ef       	ldi	r28, 0xFF	; 255
 648:	ec cf       	rjmp	.-40     	; 0x622 <puts+0x1c>
 64a:	8a e0       	ldi	r24, 0x0A	; 10
 64c:	09 95       	icall
 64e:	89 2b       	or	r24, r25
 650:	19 f0       	breq	.+6      	; 0x658 <puts+0x52>
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	9f ef       	ldi	r25, 0xFF	; 255
 656:	02 c0       	rjmp	.+4      	; 0x65c <puts+0x56>
 658:	8d 2f       	mov	r24, r29
 65a:	9c 2f       	mov	r25, r28
 65c:	df 91       	pop	r29
 65e:	cf 91       	pop	r28
 660:	1f 91       	pop	r17
 662:	0f 91       	pop	r16
 664:	08 95       	ret

00000666 <calloc>:
 666:	0f 93       	push	r16
 668:	1f 93       	push	r17
 66a:	cf 93       	push	r28
 66c:	df 93       	push	r29
 66e:	86 9f       	mul	r24, r22
 670:	80 01       	movw	r16, r0
 672:	87 9f       	mul	r24, r23
 674:	10 0d       	add	r17, r0
 676:	96 9f       	mul	r25, r22
 678:	10 0d       	add	r17, r0
 67a:	11 24       	eor	r1, r1
 67c:	c8 01       	movw	r24, r16
 67e:	0e 94 4f 03 	call	0x69e	; 0x69e <malloc>
 682:	ec 01       	movw	r28, r24
 684:	00 97       	sbiw	r24, 0x00	; 0
 686:	29 f0       	breq	.+10     	; 0x692 <calloc+0x2c>
 688:	a8 01       	movw	r20, r16
 68a:	60 e0       	ldi	r22, 0x00	; 0
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <memset>
 692:	ce 01       	movw	r24, r28
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	1f 91       	pop	r17
 69a:	0f 91       	pop	r16
 69c:	08 95       	ret

0000069e <malloc>:
 69e:	0f 93       	push	r16
 6a0:	1f 93       	push	r17
 6a2:	cf 93       	push	r28
 6a4:	df 93       	push	r29
 6a6:	82 30       	cpi	r24, 0x02	; 2
 6a8:	91 05       	cpc	r25, r1
 6aa:	10 f4       	brcc	.+4      	; 0x6b0 <malloc+0x12>
 6ac:	82 e0       	ldi	r24, 0x02	; 2
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__flp>
 6b4:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__flp+0x1>
 6b8:	20 e0       	ldi	r18, 0x00	; 0
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	a0 e0       	ldi	r26, 0x00	; 0
 6be:	b0 e0       	ldi	r27, 0x00	; 0
 6c0:	30 97       	sbiw	r30, 0x00	; 0
 6c2:	19 f1       	breq	.+70     	; 0x70a <malloc+0x6c>
 6c4:	40 81       	ld	r20, Z
 6c6:	51 81       	ldd	r21, Z+1	; 0x01
 6c8:	02 81       	ldd	r16, Z+2	; 0x02
 6ca:	13 81       	ldd	r17, Z+3	; 0x03
 6cc:	48 17       	cp	r20, r24
 6ce:	59 07       	cpc	r21, r25
 6d0:	c8 f0       	brcs	.+50     	; 0x704 <malloc+0x66>
 6d2:	84 17       	cp	r24, r20
 6d4:	95 07       	cpc	r25, r21
 6d6:	69 f4       	brne	.+26     	; 0x6f2 <malloc+0x54>
 6d8:	10 97       	sbiw	r26, 0x00	; 0
 6da:	31 f0       	breq	.+12     	; 0x6e8 <malloc+0x4a>
 6dc:	12 96       	adiw	r26, 0x02	; 2
 6de:	0c 93       	st	X, r16
 6e0:	12 97       	sbiw	r26, 0x02	; 2
 6e2:	13 96       	adiw	r26, 0x03	; 3
 6e4:	1c 93       	st	X, r17
 6e6:	27 c0       	rjmp	.+78     	; 0x736 <malloc+0x98>
 6e8:	00 93 1a 01 	sts	0x011A, r16	; 0x80011a <__flp>
 6ec:	10 93 1b 01 	sts	0x011B, r17	; 0x80011b <__flp+0x1>
 6f0:	22 c0       	rjmp	.+68     	; 0x736 <malloc+0x98>
 6f2:	21 15       	cp	r18, r1
 6f4:	31 05       	cpc	r19, r1
 6f6:	19 f0       	breq	.+6      	; 0x6fe <malloc+0x60>
 6f8:	42 17       	cp	r20, r18
 6fa:	53 07       	cpc	r21, r19
 6fc:	18 f4       	brcc	.+6      	; 0x704 <malloc+0x66>
 6fe:	9a 01       	movw	r18, r20
 700:	bd 01       	movw	r22, r26
 702:	ef 01       	movw	r28, r30
 704:	df 01       	movw	r26, r30
 706:	f8 01       	movw	r30, r16
 708:	db cf       	rjmp	.-74     	; 0x6c0 <malloc+0x22>
 70a:	21 15       	cp	r18, r1
 70c:	31 05       	cpc	r19, r1
 70e:	f9 f0       	breq	.+62     	; 0x74e <malloc+0xb0>
 710:	28 1b       	sub	r18, r24
 712:	39 0b       	sbc	r19, r25
 714:	24 30       	cpi	r18, 0x04	; 4
 716:	31 05       	cpc	r19, r1
 718:	80 f4       	brcc	.+32     	; 0x73a <malloc+0x9c>
 71a:	8a 81       	ldd	r24, Y+2	; 0x02
 71c:	9b 81       	ldd	r25, Y+3	; 0x03
 71e:	61 15       	cp	r22, r1
 720:	71 05       	cpc	r23, r1
 722:	21 f0       	breq	.+8      	; 0x72c <malloc+0x8e>
 724:	fb 01       	movw	r30, r22
 726:	93 83       	std	Z+3, r25	; 0x03
 728:	82 83       	std	Z+2, r24	; 0x02
 72a:	04 c0       	rjmp	.+8      	; 0x734 <malloc+0x96>
 72c:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__flp+0x1>
 730:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__flp>
 734:	fe 01       	movw	r30, r28
 736:	32 96       	adiw	r30, 0x02	; 2
 738:	44 c0       	rjmp	.+136    	; 0x7c2 <malloc+0x124>
 73a:	fe 01       	movw	r30, r28
 73c:	e2 0f       	add	r30, r18
 73e:	f3 1f       	adc	r31, r19
 740:	81 93       	st	Z+, r24
 742:	91 93       	st	Z+, r25
 744:	22 50       	subi	r18, 0x02	; 2
 746:	31 09       	sbc	r19, r1
 748:	39 83       	std	Y+1, r19	; 0x01
 74a:	28 83       	st	Y, r18
 74c:	3a c0       	rjmp	.+116    	; 0x7c2 <malloc+0x124>
 74e:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 752:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 756:	23 2b       	or	r18, r19
 758:	41 f4       	brne	.+16     	; 0x76a <malloc+0xcc>
 75a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 75e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 762:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__brkval+0x1>
 766:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__brkval>
 76a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 76e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 772:	21 15       	cp	r18, r1
 774:	31 05       	cpc	r19, r1
 776:	41 f4       	brne	.+16     	; 0x788 <malloc+0xea>
 778:	2d b7       	in	r18, 0x3d	; 61
 77a:	3e b7       	in	r19, 0x3e	; 62
 77c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 780:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 784:	24 1b       	sub	r18, r20
 786:	35 0b       	sbc	r19, r21
 788:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__brkval>
 78c:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__brkval+0x1>
 790:	e2 17       	cp	r30, r18
 792:	f3 07       	cpc	r31, r19
 794:	a0 f4       	brcc	.+40     	; 0x7be <malloc+0x120>
 796:	2e 1b       	sub	r18, r30
 798:	3f 0b       	sbc	r19, r31
 79a:	28 17       	cp	r18, r24
 79c:	39 07       	cpc	r19, r25
 79e:	78 f0       	brcs	.+30     	; 0x7be <malloc+0x120>
 7a0:	ac 01       	movw	r20, r24
 7a2:	4e 5f       	subi	r20, 0xFE	; 254
 7a4:	5f 4f       	sbci	r21, 0xFF	; 255
 7a6:	24 17       	cp	r18, r20
 7a8:	35 07       	cpc	r19, r21
 7aa:	48 f0       	brcs	.+18     	; 0x7be <malloc+0x120>
 7ac:	4e 0f       	add	r20, r30
 7ae:	5f 1f       	adc	r21, r31
 7b0:	50 93 19 01 	sts	0x0119, r21	; 0x800119 <__brkval+0x1>
 7b4:	40 93 18 01 	sts	0x0118, r20	; 0x800118 <__brkval>
 7b8:	81 93       	st	Z+, r24
 7ba:	91 93       	st	Z+, r25
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <malloc+0x124>
 7be:	e0 e0       	ldi	r30, 0x00	; 0
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	cf 01       	movw	r24, r30
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	1f 91       	pop	r17
 7ca:	0f 91       	pop	r16
 7cc:	08 95       	ret

000007ce <free>:
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	00 97       	sbiw	r24, 0x00	; 0
 7d4:	09 f4       	brne	.+2      	; 0x7d8 <free+0xa>
 7d6:	81 c0       	rjmp	.+258    	; 0x8da <free+0x10c>
 7d8:	fc 01       	movw	r30, r24
 7da:	32 97       	sbiw	r30, 0x02	; 2
 7dc:	13 82       	std	Z+3, r1	; 0x03
 7de:	12 82       	std	Z+2, r1	; 0x02
 7e0:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <__flp>
 7e4:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <__flp+0x1>
 7e8:	10 97       	sbiw	r26, 0x00	; 0
 7ea:	81 f4       	brne	.+32     	; 0x80c <free+0x3e>
 7ec:	20 81       	ld	r18, Z
 7ee:	31 81       	ldd	r19, Z+1	; 0x01
 7f0:	82 0f       	add	r24, r18
 7f2:	93 1f       	adc	r25, r19
 7f4:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 7f8:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 7fc:	28 17       	cp	r18, r24
 7fe:	39 07       	cpc	r19, r25
 800:	51 f5       	brne	.+84     	; 0x856 <free+0x88>
 802:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__brkval+0x1>
 806:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__brkval>
 80a:	67 c0       	rjmp	.+206    	; 0x8da <free+0x10c>
 80c:	ed 01       	movw	r28, r26
 80e:	20 e0       	ldi	r18, 0x00	; 0
 810:	30 e0       	ldi	r19, 0x00	; 0
 812:	ce 17       	cp	r28, r30
 814:	df 07       	cpc	r29, r31
 816:	40 f4       	brcc	.+16     	; 0x828 <free+0x5a>
 818:	4a 81       	ldd	r20, Y+2	; 0x02
 81a:	5b 81       	ldd	r21, Y+3	; 0x03
 81c:	9e 01       	movw	r18, r28
 81e:	41 15       	cp	r20, r1
 820:	51 05       	cpc	r21, r1
 822:	f1 f0       	breq	.+60     	; 0x860 <free+0x92>
 824:	ea 01       	movw	r28, r20
 826:	f5 cf       	rjmp	.-22     	; 0x812 <free+0x44>
 828:	d3 83       	std	Z+3, r29	; 0x03
 82a:	c2 83       	std	Z+2, r28	; 0x02
 82c:	40 81       	ld	r20, Z
 82e:	51 81       	ldd	r21, Z+1	; 0x01
 830:	84 0f       	add	r24, r20
 832:	95 1f       	adc	r25, r21
 834:	c8 17       	cp	r28, r24
 836:	d9 07       	cpc	r29, r25
 838:	59 f4       	brne	.+22     	; 0x850 <free+0x82>
 83a:	88 81       	ld	r24, Y
 83c:	99 81       	ldd	r25, Y+1	; 0x01
 83e:	84 0f       	add	r24, r20
 840:	95 1f       	adc	r25, r21
 842:	02 96       	adiw	r24, 0x02	; 2
 844:	91 83       	std	Z+1, r25	; 0x01
 846:	80 83       	st	Z, r24
 848:	8a 81       	ldd	r24, Y+2	; 0x02
 84a:	9b 81       	ldd	r25, Y+3	; 0x03
 84c:	93 83       	std	Z+3, r25	; 0x03
 84e:	82 83       	std	Z+2, r24	; 0x02
 850:	21 15       	cp	r18, r1
 852:	31 05       	cpc	r19, r1
 854:	29 f4       	brne	.+10     	; 0x860 <free+0x92>
 856:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__flp+0x1>
 85a:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__flp>
 85e:	3d c0       	rjmp	.+122    	; 0x8da <free+0x10c>
 860:	e9 01       	movw	r28, r18
 862:	fb 83       	std	Y+3, r31	; 0x03
 864:	ea 83       	std	Y+2, r30	; 0x02
 866:	49 91       	ld	r20, Y+
 868:	59 91       	ld	r21, Y+
 86a:	c4 0f       	add	r28, r20
 86c:	d5 1f       	adc	r29, r21
 86e:	ec 17       	cp	r30, r28
 870:	fd 07       	cpc	r31, r29
 872:	61 f4       	brne	.+24     	; 0x88c <free+0xbe>
 874:	80 81       	ld	r24, Z
 876:	91 81       	ldd	r25, Z+1	; 0x01
 878:	84 0f       	add	r24, r20
 87a:	95 1f       	adc	r25, r21
 87c:	02 96       	adiw	r24, 0x02	; 2
 87e:	e9 01       	movw	r28, r18
 880:	99 83       	std	Y+1, r25	; 0x01
 882:	88 83       	st	Y, r24
 884:	82 81       	ldd	r24, Z+2	; 0x02
 886:	93 81       	ldd	r25, Z+3	; 0x03
 888:	9b 83       	std	Y+3, r25	; 0x03
 88a:	8a 83       	std	Y+2, r24	; 0x02
 88c:	e0 e0       	ldi	r30, 0x00	; 0
 88e:	f0 e0       	ldi	r31, 0x00	; 0
 890:	12 96       	adiw	r26, 0x02	; 2
 892:	8d 91       	ld	r24, X+
 894:	9c 91       	ld	r25, X
 896:	13 97       	sbiw	r26, 0x03	; 3
 898:	00 97       	sbiw	r24, 0x00	; 0
 89a:	19 f0       	breq	.+6      	; 0x8a2 <free+0xd4>
 89c:	fd 01       	movw	r30, r26
 89e:	dc 01       	movw	r26, r24
 8a0:	f7 cf       	rjmp	.-18     	; 0x890 <free+0xc2>
 8a2:	8d 91       	ld	r24, X+
 8a4:	9c 91       	ld	r25, X
 8a6:	11 97       	sbiw	r26, 0x01	; 1
 8a8:	9d 01       	movw	r18, r26
 8aa:	2e 5f       	subi	r18, 0xFE	; 254
 8ac:	3f 4f       	sbci	r19, 0xFF	; 255
 8ae:	82 0f       	add	r24, r18
 8b0:	93 1f       	adc	r25, r19
 8b2:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 8b6:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 8ba:	28 17       	cp	r18, r24
 8bc:	39 07       	cpc	r19, r25
 8be:	69 f4       	brne	.+26     	; 0x8da <free+0x10c>
 8c0:	30 97       	sbiw	r30, 0x00	; 0
 8c2:	29 f4       	brne	.+10     	; 0x8ce <free+0x100>
 8c4:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__flp+0x1>
 8c8:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__flp>
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <free+0x104>
 8ce:	13 82       	std	Z+3, r1	; 0x03
 8d0:	12 82       	std	Z+2, r1	; 0x02
 8d2:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <__brkval+0x1>
 8d6:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <__brkval>
 8da:	df 91       	pop	r29
 8dc:	cf 91       	pop	r28
 8de:	08 95       	ret

000008e0 <memset>:
 8e0:	dc 01       	movw	r26, r24
 8e2:	01 c0       	rjmp	.+2      	; 0x8e6 <memset+0x6>
 8e4:	6d 93       	st	X+, r22
 8e6:	41 50       	subi	r20, 0x01	; 1
 8e8:	50 40       	sbci	r21, 0x00	; 0
 8ea:	e0 f7       	brcc	.-8      	; 0x8e4 <memset+0x4>
 8ec:	08 95       	ret

000008ee <_exit>:
 8ee:	f8 94       	cli

000008f0 <__stop_program>:
 8f0:	ff cf       	rjmp	.-2      	; 0x8f0 <__stop_program>
